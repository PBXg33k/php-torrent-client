<?php
/**
 * Created by PhpStorm.
 * User: PBX_g33k
 * Date: 04-Mar-17
 * Time: 00:01
 */

namespace Pbxg33k\TorrentClient\Tests\Client;

use GuzzleHttp\Client;
use GuzzleHttp\ClientInterface;
use GuzzleHttp\Handler\MockHandler;
use GuzzleHttp\HandlerStack;
use GuzzleHttp\Psr7\Response;
use Monolog\Handler\HandlerInterface;
use Monolog\Logger;
use Pbxg33k\TorrentClient\Client\UtorrentClient;


class UtorrentClientTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var ClientInterface
     */
    protected $client;

    /**
     * @var UtorrentClient
     */
    protected $utorrentClient;

    /**
     * @var \PHPUnit_Framework_MockObject_MockObject
     */
    protected $logger;

    public function setUp()
    {
        $this->logger = $logger = $this->createMock(Logger::class);

        $this->client = new UtorrentClient();

        $this->client->setLogger($logger);


        parent::setUp(); // TODO: Change the autogenerated stub
    }

    /**
     * @test
     */
    public function willReturnListOfTorrent()
    {
        $this->getListResponse();

        $result = $this->utorrentClient->listTorrents(true);


    }

    protected function getListResponse()
    {
        $responseBody = '{"build":25110,"label": [
]
,"torrents": [

["684E3D0CFAB237DED715DCC546BFBCF90FDFA09F",136,"SNES",1106914280,1000,1106914280,32636928,29,0,0,0,"",0,0,0,0,65536,-1,0]]
,"torrentc": "839331950"
,"rssfeeds": []
,"rssfilters": []
,"messages": [
]
}
';

        return $this->createMock(200, $responseBody);
    }

    protected function createMockHandler($responseCode, $responseBody)
    {
        $mock = new MockHandler([
            new Response($responseCode, ['Content-Length' => strlen($responseBody)], $responseBody)
        ]);

        $handler = HandlerStack::create($mock);
        $this->client = new Client(['handler' => $handler]);

        $this->utorrentClient->setClient($this->client);

        return $this->client;
    }
}
